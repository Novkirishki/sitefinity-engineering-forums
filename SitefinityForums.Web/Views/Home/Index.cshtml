@{
    ViewData["Title"] = "Threads List";
}

<div class="jumbotron">
    <h2>Unanswered threads</h2>
    <h5>
        This is a list of all unanswered threads found on our forum. Opened threads are those that have not yet been attended to.
        Closed threads are ones that are still not marked as answerted by the poster, but have been responded to.
        Closed threads that have new post will automatically be marked as opened again.
    </h5>
</div>

<div ng-controller="threadsListController" ng-cloak>
    <div ng-show="loading" class="alert alert-info" role="alert">LOADING... this could take some time as the forums server is not that fast and it needs to be crawled.</div>
    <div ng-show="!loading">
        <div id="filter">
            <a href="javascript:void" ng-click="toggleShowClosed()">Show/Hide closed.</a>
        </div>
        <hr />
        <div ng-show="threads">
            <ul class="list-group">
                <li ng-repeat="thread in threads" class="list-group-item">
                    <span ng-class="['label', {'label-danger': thread.opened, 'label-success': !thread.opened}]">{{thread.opened ? 'OPENED' : 'CLOSED'}}</span>
                    <a href="{{thread.link}}">{{thread.title}}</a>
                    |
                    <button ng-click="toggleOpened(thread)" class="btn btn-sm btn-link">Click to {{thread.opened ? 'close' : 'open'}}</button>
                    |
                    <span ng-show="thread.assignedTo && !changingOwner">Owner: {{thread.assignedTo}}</span>
                    <button ng-click="thread.changingOwner = true">Change owner</button>
                    <div ng-show="thread.changingOwner">
                        <input type="text" ng-model="thread.newOwner" />
                        <button ng-click="changeOwner(thread)">Save</button>
                        <button ng-click="thread.changingOwner = false">Cancel</button>
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {

            forumsApp.controller('threadsListController', ['$scope', 'threadsService', 'msg',
                function ($scope, threadsService, msg) {
                    var showClosedFilter = false;
                    var allThreads;

                    $scope.changingOwner = false;

                    $scope.changeOwner = function (thread) {
                        thread.changingOwner = false;
                        thread.assignedTo = thread.newOwner;
                        updateThread(thread);
                    }

                    $scope.toggleOpened = function (thread) {
                        thread.opened = !thread.opened;
                        updateThread(thread);
                    }

                    $scope.toggleShowClosed = function () {
                        showClosedFilter = !showClosedFilter;
                        refreshThreads();
                    };

                    updateThread = function (thread) {
                        threadsService.update(thread)
                            .catch(function (err) {
                                msg.showError(err, 5000);
                                Init();
                            })
                    }

                    function Init() {
                        $scope.loading = true;
                        threadsService.getThreads()
                            .then(function (data) {
                                allThreads = data;
                                refreshThreads();
                                $scope.loading = false;
                            }, function (err) {
                                msg.showError(err, 5000);
                            })
                    }

                    function refreshThreads() {
                        $scope.threads = allThreads.filter(function (thread) {
                            if (!thread.opened && !showClosedFilter) {
                                return false;
                            } else {
                                return true;
                            }
                        })
                    }

                    Init();
                }
            ]);
        })();
    </script>
}